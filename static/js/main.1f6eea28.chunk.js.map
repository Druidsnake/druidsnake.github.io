{"version":3,"sources":["types/types.js","redux/reducers/authReducer.js","helpers/fetch.js","redux/actions/calendar.js","redux/reducers/calendarReducer.js","redux/reducers/uiReducer.js","redux/rootReducer.js","store/store.js","hooks/useForm.js","redux/actions/auth.js","Components/auth/LoginScreen.js","Components/ui/Navbar.js","helpers/calendar-messages-es.js","Components/calendar/CalendarEvent.js","redux/actions/ui.js","Components/calendar/CalendarModal.js","Components/ui/AddNewFab.js","Components/ui/DeleteEventFab.js","Components/calendar/CalendarScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","CalendarApp.js","index.js"],"names":["types","uiOpenModal","uiCloseModal","calendarSetActiveEvent","calendarAddNewEvent","calendarClearActiveEvent","calendarStartUpdating","calendarUpdatedEvent","calendarDeletedEvent","calendarStartLoading","calendarLoaded","calendarLogoutEvent","authCheckingFinish","authStartLogin","authLogin","authStartRegister","authStartTokenRenew","authLogout","initialState","checking","uid","name","authReducer","state","action","type","payload","authClearSessionData","baseUrl","process","fetchSinToken","endpoint","data","a","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","addNewEvent","e","clearActiveEvent","updatedEvent","eventsLoaded","events","activeEvent","calendarReducer","map","id","filter","modalOpen","uiReducer","rootReducer","combineReducers","ui","auth","calendar","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","useForm","useState","values","setValues","reset","newState","handleInputChange","target","value","login","user","startLogout","dispatch","clear","checkingFinish","LoginScreen","useDispatch","login_email","login_password","formLoginValues","handleLoginInputChange","register_name","register_mail","register_password","register_password2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","resp","json","ok","setItem","Date","getTime","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","event","noEventsInRange","showMore","total","CalendarEvent","title","setModalOpen","now","moment","minutes","seconds","now2","clone","add","initialEvent","notes","start","toDate","end","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","Modal","setAppElement","closeModal","isOpen","onAfterOpen","onRequestClose","style","content","top","left","right","bottom","marginRight","transform","closeTimeoutMS","overlayClassName","contentLabel","noValidate","console","log","momentStart","momentEnd","isSameOrAfter","trim","length","getState","startEventUpdate","_id","eventId","response","startAddNewEvent","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setlastView","startAccessor","endAccessor","onSelectSlot","selectable","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","onDoubleClickEvent","onSelectEvent","setActiveEvent","onView","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f6eea28.chunk.js","sourcesContent":["export const types = {\r\n    uiOpenModal: \"[ui] Open modal\",\r\n    uiCloseModal: \"[ui] Close modal\",\r\n\r\n    calendarSetActiveEvent: \"[calendar] Set active event\",\r\n    calendarAddNewEvent: \"[calendar] Add new event\",\r\n    calendarClearActiveEvent: \"[calendar] Clear Active event\",\r\n    calendarStartUpdating: \"[calendar] Event start to update\",\r\n    calendarUpdatedEvent: \"[calendar] Event updated\",\r\n    calendarDeletedEvent: \"[calendar] Event deleted\",\r\n    calendarStartLoading: \"[calendar] Events start loading\",\r\n    calendarLoaded: \"[calendar] Events loaded\",\r\n    calendarLogoutEvent: \"[auth] Cleaning events data\",\r\n\r\n    // authChecking: \"[auth] Checking login state\",\r\n    authCheckingFinish: \"[auth] Finish checking login state\",\r\n    authStartLogin: \"[auth] Start login\",\r\n    authLogin: \"[auth] Login\",\r\n    authStartRegister: \"[auth] Start register\",\r\n    authStartTokenRenew: \"[auth] Start token renew\",\r\n    authLogout: \"[auth] Logout\",\r\n\r\n\r\n}","import { types } from \"../../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    uid: null,\r\n    name: null\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n        case types.authClearSessionData:\r\n            return {\r\n                checking: false\r\n            }\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default authReducer;","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = async( endpoint, data, method = \"GET\" ) => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n\r\n    if(method === 'GET'){\r\n        return await fetch(url);\r\n    }else{\r\n        return await fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n}\r\n\r\nconst fetchConToken = async (endpoint, data, method = \"GET\") => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (method === 'GET') {\r\n        return await fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return await fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n}\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../../helpers/fetch\";\r\nimport { types } from \"../../types/types\";\r\nimport moment from \"moment\";\r\n\r\nexport const startLoadingEvents = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                const events = body.events;\r\n\r\n                events.map((e) => {\r\n                    e.start = moment(e.start).toDate()\r\n                    e.end = moment(e.end).toDate()\r\n                });\r\n\r\n                dispatch(eventsLoaded(events));\r\n\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            Swal.fire('Error', error.response.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const setActiveEvent = (e) => ({\r\n    type: types.calendarSetActiveEvent,\r\n    payload: e\r\n})\r\n\r\nconst addNewEvent = (e) => ({\r\n    type: types.calendarAddNewEvent,\r\n    payload: e\r\n})\r\n\r\nexport const clearActiveEvent = (e) => ({ type: types.calendarClearActiveEvent })\r\n\r\nexport const updatedEvent = (e) => ({\r\n    type: types.calendarUpdatedEvent,\r\n    payload: e\r\n})\r\n\r\nexport const deletedEvent = (e) => ({ type: types.calendarDeletedEvent, payload: e })\r\n\r\nexport const startAddNewEvent = (e) => {\r\n\r\n    return async (dispatch, getState) => {\r\n\r\n        const {uid: _id, name} = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchConToken('events', e, 'POST');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                e.id = body.eventId\r\n                e.user = {\r\n                    _id,\r\n                    name,\r\n                }\r\n\r\n                dispatch(addNewEvent(e));\r\n\r\n                Swal.fire('Success', 'Evento creado exitosamente', 'success');\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            Swal.fire('Error', error.response.msg, 'error');\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventsLoaded = (events) => ({\r\n    type: types.calendarLoaded,\r\n    payload: events\r\n})\r\n\r\nexport const startEventUpdate = (e) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {activeEvent} = getState().calendar;\r\n        try {\r\n\r\n            const resp = await fetchConToken(`events/${activeEvent.id}`, { ...activeEvent, ...e }, 'PUT');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                dispatch(updatedEvent(e));\r\n\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            // Swal.fire('Error', error.response.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startEventDeletion = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { activeEvent } = getState().calendar;\r\n\r\n        try {\r\n            const resp = await fetchConToken(`events/${activeEvent.id}`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n            console.log(body);\r\n\r\n            if (body.ok) {\r\n                dispatch(deletedEvent(activeEvent));\r\n                dispatch(clearActiveEvent())\r\n                Swal.fire('Success', body.msg, 'success');\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            // Swal.fire('Error', error.response.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const logoutEvent = () => ({\r\n    type: types.calendarLogoutEvent\r\n})","import { types } from '../../types/types';\r\nimport { setActiveEvent } from '../actions/calendar';\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.calendarLoaded:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...action.payload\r\n                ]\r\n            }\r\n        case types.calendarSetActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        case types.calendarAddNewEvent:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n        case types.calendarClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n        case types.calendarUpdatedEvent:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => ( e.id === action.payload.id ) ? action.payload : e\r\n                )\r\n            }\r\n        case types.calendarDeletedEvent:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => e.id !== action.payload.id\r\n                )\r\n            }\r\n        case types.calendarLogoutEvent:\r\n            return {\r\n                ...initialState\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default calendarReducer;","import { types } from \"../../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\nconst uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default uiReducer;","import { combineReducers } from 'redux';\r\nimport authReducer from './reducers/authReducer';\r\nimport calendarReducer from './reducers/calendarReducer';\r\nimport uiReducer from './reducers/uiReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    auth: authReducer,\r\n    calendar: calendarReducer\r\n})","\r\nimport { createStore, compose, applyMiddleware } from 'redux';\r\nimport { rootReducer } from '../redux/rootReducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhancers = ( typeof window !== \"undefined\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose )\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import { useState } from \"react\";\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n\r\n    const [ values, setValues ] = useState( initialState );\r\n\r\n    const reset = ( newState = initialState ) => {\r\n        setValues( newState );\r\n    }\r\n\r\n    const handleInputChange = ( { target } ) => {\r\n        setValues( {\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        } );\r\n    }\r\n    return [ values, handleInputChange, reset ];\r\n}","import { fetchConToken, fetchSinToken } from \"../../helpers/fetch\";\r\nimport { types } from \"../../types/types\";\r\nimport Swal from 'sweetalert2'\r\nimport { logoutEvent } from \"./calendar\";\r\n\r\nexport const startLogin = ( email, password ) => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchSinToken('auth', {email, password}, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n})\r\n\r\nconst logout = () => ({\r\n    type: types.authLogout\r\n})\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch( logout() );\r\n        dispatch( logoutEvent() );\r\n    }\r\n}\r\nexport const startRegister = (name, email, password) => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchSinToken('auth/new', { name, email, password }, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if(body.ok ){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else{\r\n            return Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n\r\n        if (!!localStorage.getItem('token')){\r\n            const resp = await fetchConToken('auth/renew');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                localStorage.setItem('token', body.token);\r\n                localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n                dispatch(login({\r\n                    uid: body.uid,\r\n                    name: body.name\r\n                }))\r\n            } else {\r\n                dispatch(checkingFinish())\r\n            }\r\n        }\r\n        dispatch(checkingFinish())\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({\r\n    type: types.authCheckingFinish\r\n})","import React from 'react';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { startLogin, startRegister } from '../../redux/actions/auth';\r\nimport '../../styles/login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const initialLoginForm = {\r\n        login_email: 'drullian@gmail.com',\r\n        login_password: 'casacasa'\r\n    }\r\n\r\n    const initialRegisterForm = {\r\n        register_name: 'Druidsnake',\r\n        register_mail: 'drullian@gmail.com',\r\n        register_password: 'casacasa',\r\n        register_password2: 'casacasa'\r\n    }\r\n\r\n    const [formLoginValues, handleLoginInputChange, loginReset] = useForm(initialLoginForm );\r\n    const [formRegisterValues, handleRegisterInputChange, registerReset] = useForm(initialRegisterForm );\r\n\r\n    const { login_email, login_password} = formLoginValues;\r\n    const { register_name, register_mail, register_password, register_password2} = formRegisterValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch( startLogin(login_email, login_password) );\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        if(register_password !== register_password2){\r\n            return Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error');\r\n        }\r\n        dispatch(startRegister(register_name, register_mail, register_password));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                name=\"login_email\"\r\n                                type=\"text\"\r\n                                value={login_email}\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                name=\"login_password\"\r\n                                type=\"password\"\r\n                                value={login_password}\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                name=\"register_name\"\r\n                                type=\"text\"\r\n                                value={register_name}\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                name=\"register_mail\"\r\n                                type=\"email\"\r\n                                value={register_mail}\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                name=\"register_password\"\r\n                                type=\"password\"\r\n                                value={register_password}\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                name=\"register_password2\"\r\n                                type=\"password\"\r\n                                value={register_password2}\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Crear cuenta\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../redux/actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { name } = useSelector(state => state.auth)\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n            <button\r\n                className=\"btn btn-outline-danger\"\r\n                onClick={handleLogout}\r\n            >\r\n                <i className=\"fas fa-sign-out-alt mr-2\"></i>\r\n                <span>Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ( {event} ) => {\r\n\r\n    const { title, user } = event;\r\n\r\n    return (\r\n        <>\r\n            <strong>{ title }</strong>\r\n            <span> - { user.name }</span>\r\n        </>\r\n    )\r\n}\r\n","import { types } from \"../../types/types\";\r\n\r\nexport const setModalOpen = () => ({\r\n    type: types.uiOpenModal\r\n})\r\n\r\nexport const setModalClose = () => ({\r\n    type: types.uiCloseModal\r\n})","import React, { useState, useEffect } from 'react'\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from \"sweetalert2\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setModalClose } from '../../redux/actions/ui';\r\nimport { addNewEvent, clearActiveEvent, startAddNewEvent, startEventUpdate, updatedEvent } from '../../redux/actions/calendar';\r\n\r\nconst now = moment().minutes(0).seconds(0);\r\nconst now2 = now.clone().add(1, \"hours\");\r\n\r\nconst initialEvent = {\r\n    title: \"\",\r\n    notes: \"\",\r\n    start: now.toDate(),\r\n    end: now.add(1, \"hour\").toDate(),\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate())\r\n    const [dateEnd, setDateEnd] = useState(now2.toDate())\r\n    const [titleValid, setTitleValid] = useState(true)\r\n\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n\r\n    const [formValues, setFormValues] = useState( initialEvent )\r\n\r\n    const { notes, title, start, end } = formValues;\r\n\r\n    const { activeEvent } = useSelector(state => state.calendar)\r\n    const { uid, name } = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n        if (activeEvent) {\r\n            setFormValues({\r\n                ...activeEvent\r\n            })\r\n        }else {\r\n            setFormValues(initialEvent)\r\n        }\r\n    }, [activeEvent])\r\n\r\n    const customStyles = {\r\n        content: {\r\n            top: '50%',\r\n            left: '50%',\r\n            right: 'auto',\r\n            bottom: 'auto',\r\n            marginRight: '-50%',\r\n            transform: 'translate(-50%, -50%)',\r\n        },\r\n    };\r\n    Modal.setAppElement('#root');\r\n\r\n\r\n    const closeModal = (e) => {\r\n        dispatch(setModalClose())\r\n        dispatch(clearActiveEvent())\r\n        setFormValues(initialEvent)\r\n    }\r\n\r\n    const afterOpenModal = () => {\r\n        // references are now sync'd and can be accessed.\r\n        // subtitle.style.color = '#f00';\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart(e)\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(start);\r\n        console.log(end);\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if (momentStart.isSameOrAfter(momentEnd)) {\r\n            return Swal.fire(\"Error\", \"La fecha fin debe ser mayor a la fecha inicio\", \"error\");\r\n        }\r\n        if(title.trim().length < 2){\r\n            return setTitleValid(false)\r\n        }else {\r\n            setTitleValid(true)\r\n        }\r\n        if (activeEvent) {\r\n            dispatch(startEventUpdate( formValues ));\r\n        }else {\r\n            dispatch(startAddNewEvent( formValues ));\r\n        }\r\n\r\n\r\n        closeModal();\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                isOpen={modalOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                closeTimeoutMS={200}\r\n                className=\"modal\"\r\n                overlayClassName=\"modal-fondo\"\r\n                contentLabel=\"Example Modal\"\r\n\r\n            >\r\n                <h1> Nuevo evento </h1>\r\n                <hr />\r\n                <form\r\n                    noValidate\r\n                    onSubmit={handleSubmit}\r\n                    className=\"container\">\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Fecha y hora inicio</label>\r\n                        <DateTimePicker\r\n                            onChange={handleStartDateChange}\r\n                            value={dateStart}\r\n                            // className=\"form-control\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Fecha y hora fin</label>\r\n                        <DateTimePicker\r\n                            onChange={handleEndDateChange}\r\n                            value={dateEnd}\r\n                            // className=\"form-control\"\r\n                            minDate={dateStart}\r\n                        />\r\n                    </div>\r\n\r\n                    <hr />\r\n                    <div className=\"form-group\">\r\n                        <label>Titulo y notas</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className={`form-control ${!titleValid && \"is-invalid\"}`}\r\n                            placeholder=\"Título del evento\"\r\n                            name=\"title\"\r\n                            value={title}\r\n                            autoComplete=\"off\"\r\n                            onChange={handleInputChange}\r\n                        />\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <textarea\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Notas\"\r\n                            rows=\"5\"\r\n                            name=\"notes\"\r\n                            value={notes}\r\n                            onChange={handleInputChange}\r\n                        ></textarea>\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                    </div>\r\n\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-outline-primary btn-block\"\r\n                    >\r\n                        <i className=\"far fa-save\"></i>\r\n                        <span> Guardar</span>\r\n                    </button>\r\n\r\n                </form>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { clearActiveEvent } from '../../redux/actions/calendar';\r\nimport { setModalOpen } from '../../redux/actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const openModal = () => {\r\n        dispatch(clearActiveEvent())\r\n        dispatch(setModalOpen());\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button\r\n                className=\"btn btn-primary fab\"\r\n                onClick={openModal}\r\n            >\r\n                <i className=\"fas fa-plus\"></i>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { startEventDeletion } from '../../redux/actions/calendar';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClick = () => {\r\n        dispatch(startEventDeletion());\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button\r\n                className=\"btn btn-danger fab-danger\"\r\n                onClick={ handleClick }\r\n            >\r\n                <i className=\"fas fa-trash mr-2\"></i>\r\n                <span>Borrar evento</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\n\r\nimport moment from 'moment'\r\nimport 'moment/locale/es'\r\nimport { Navbar } from '../ui/Navbar'\r\nimport { messages } from '../../helpers/calendar-messages-es'\r\nimport { CalendarEvent } from './CalendarEvent'\r\nimport { CalendarModal } from './CalendarModal'\r\nimport { setModalOpen } from '../../redux/actions/ui'\r\nimport { clearActiveEvent, setActiveEvent, startLoadingEvents } from '../../redux/actions/calendar'\r\nimport { AddNewFab } from '../ui/AddNewFab'\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab'\r\nmoment.locale(\"es\");\r\n\r\n\r\nconst localizer = momentLocalizer(moment)\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(startLoadingEvents());\r\n    }, [dispatch])\r\n\r\n    const { uid } = useSelector(state => state.auth);\r\n    const { events, activeEvent } = useSelector(state => state.calendar);\r\n\r\n    const [lastView, setlastView] = useState( localStorage.getItem(\"lastView\") || \"month\")\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch(setModalOpen())\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch(setActiveEvent(e))\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        localStorage.setItem(\"lastView\", e);\r\n        setlastView(e)\r\n    }\r\n\r\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\r\n        const style = {\r\n            backgroundColor: (uid == event.user._id) ? \"blue\" : \"#4EC5F1\",\r\n            borderRadius: \"0px\",\r\n            opacity: 0.8,\r\n            display: \"block\",\r\n        }\r\n        return {\r\n            style\r\n        }\r\n    }\r\n\r\n    const onSelectSlot = () => {\r\n        dispatch(clearActiveEvent());\r\n    }\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={ events }\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={ messages }\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                eventPropGetter={ eventStyleGetter }\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                view={lastView}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n            <AddNewFab />\r\n            {\r\n                activeEvent && <DeleteEventFab />\r\n            }\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route { ...rest }\r\n            component={ ( props ) => (\r\n                ( isAuthenticated )\r\n                ? <Component { ...props } />\r\n                : <Redirect to=\"/login\" />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from \"react\"\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route { ...rest }\r\n            component={ ( props ) => (\r\n                ( isAuthenticated )\r\n                ? <Redirect to=\"/\" />\r\n                : <Component {...props} />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { LoginScreen } from '../Components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../Components/calendar/CalendarScreen';\r\nimport { startChecking } from '../redux/actions/auth';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch( startChecking() );\r\n    }, [dispatch])\r\n\r\n    const { checking, uid } = useSelector(state => state.auth)\r\n\r\n    if(checking){\r\n        return (<h1>Espere...</h1>)\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        exact\r\n                        path=\"/login\"\r\n                        component={ LoginScreen }\r\n                        isAuthenticated={!!uid}\r\n                    />\r\n                    <PrivateRoute\r\n                        exact\r\n                        path=\"/\"\r\n                        component={CalendarScreen}\r\n                        isAuthenticated={!!uid}\r\n                    />\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles/main.css'\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}